<launch>
    <arg name="world_file"  default="$(env TURTLEBOT_GAZEBO_WORLD_FILE)"/>
    <arg name="base"      value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
    <arg name="battery"   value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 -->
    <arg name="gui" default="true"/>
    <arg name="stacks"    value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons -->
    <arg name="3d_sensor" value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro -->
    <arg name="model_name" default="turtlebot"/>
    <arg name="x_pos" default="0"/>
    <arg name="y_pos" default="0"/>
    <arg name="yaw" default="0"/>

    <param name="x_pos" type="double" value="$(arg x_pos)"/>
    <param name="y_pos" type="double" value="$(arg y_pos)"/>
    <param name="yaw" type="double" value="$(arg yaw)"/>

    <!-- Launch the necessary Kobuki nodes for turtlebot operation-->
    <include file="$(find turtlebot)/launch/kobuki.launch.xml">
        <arg name="base" value="$(arg base)"/>
        <arg name="stacks" value="$(arg stacks)"/>
        <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
        <arg name="model_name" value="$(arg model_name)"/>
        <arg name="x_pos" value="$(arg x_pos)"/>
        <arg name="y_pos" value="$(arg y_pos)"/>
        <arg name="yaw" value="$(arg yaw)"/>
    </include>

    <!-- Robot State Publisher for publishing tf status of turtlebot-->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="30.0" />
        <param name="tf_prefix" type="string" value="$(arg model_name)"/>
    </node>

    <!-- Fake laser -->
    <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
    <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
          args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
        <param name="scan_height" value="10"/>
        <param name="output_frame_id" value="$(arg model_name)/camera_depth_frame"/>
        <param name="range_min" value="0.45"/>
        <remap from="image" to="camera/depth/image_raw"/>
        <!--remap from="scan" to="scan"/-->
    </node>

    <!-- Robot Localization nodes-->
    <node pkg="robot_localization" type="ukf_localization_node" name="ukf" clear_params="true" output="screen">
        <!--remap from="odometry/filtered" to="odometry/filtered"/-->
        <!--remap from="set_pose" to="set_pose_self"/-->
        <param name="frequency" value="10"/>
        <param name="sensor_timeout"  value="0.1"/>
        <param name="two_d_mode" value="true"/>
        <param name="odom_frame" value="odom"/>
        <param name="base_link_frame" value="base_footprint"/>
        <param name="world_frame" value="odom"/>
        <param name="transform_time_offset" value="0.0"/>
        <param name="odom0" value="odom"/> <!-- 1st external pose calculation-->
        <rosparam param="odom0_config">[false,  false,  false, <!-- x y z -->
                                        false,  false,  false, <!-- roll pitch yaw -->
                                        true,   true,   false, <!-- x_vel y_vel z_vel -->
                                        false,  false,  true, <!-- roll_vel pitch_vel yaw_vel -->
                                        false,  false,  false] <!-- x_acc y_acc z_acc -->
        </rosparam>
        <param name="imu0" value="imu"/>
        <rosparam param="imu0_config">[false,   false,  false, <!-- x y z -->
                                       false,   false,  true, <!-- roll pitch yaw -->
                                       false,   false,  false, <!-- x_vel y_vel z_vel -->
                                       false,   false,  true, <!-- roll_vel pitch_vel yaw_vel -->
                                       true,    false,  false] <!-- x_acc y_acc z_acc -->
        </rosparam>
        <param name="odom0_differential" value="false"/>
        <param name="imu0_differential" value="false"/>
        <param name="odom0_relative" value="false"/>
        <param name="imu0_relative" value="false"/>
        <param name="print_diagnostics" value="true"/>
    </node>
</launch>
